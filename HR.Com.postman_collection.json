{
	"info": {
		"_postman_id": "bbb2b247-7db0-4791-9987-1ab74f662aff",
		"name": "HR.Com",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Smoke TC",
			"item": [
				{
					"name": "Sign Up",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\" Verify if Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"pm.test(\"Verify if the response body is Json\", function () {\r",
									"    pm.response.to.have.jsonBody();\r",
									"});\r",
									"pm.test(\"Verify if the responseBody is valid\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).to.eql(4);\r",
									"    pm.expect(jsonData.token).to.eql(\"QpwL5tke4Pnpja7X4\");\r",
									"});\r",
									"pm.test(\"Verify if the Content-Type =application/json; charset=utf-8\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\",\"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if the Connection =close\", function () {\r",
									"    pm.response.to.have.header(\"Connection\",\"close\");\r",
									"});\r",
									"pm.test(\"Verify if the X-Powered-By is hidden\", function () {\r",
									"    pm.response.to.not.have.header(\"X-Powered-By\");\r",
									"});\r",
									"pm.test(\"Verify if the Server is hidden)\", function () {\r",
									"    pm.response.to.not.have.header(\"Server\");\r",
									"});\r",
									"\r",
									"console.log(\" To Know curent APIeExecuted is:\");\r",
									"console.log(pm.info.requestName);\r",
									"if( pm.info.requestName==\"sign Up\")\r",
									"{ \r",
									"    console.log(\" User is in SignUp page\")\r",
									"}\r",
									"else \r",
									"{\r",
									"console.log(\"useris not in console page\")\r",
									"}\r",
									"\r",
									"console.log(pm.response.json());\r",
									"/*\r",
									"\r",
									"\r",
									"console.log(pm.info.iterationCount);\r",
									"for(i=0;i<=5;i++)\r",
									"{\r",
									"console.log(\"To know the current iteration count\",i);\r",
									"//console.log(\" The know the  value of i\",i);\r",
									"console.log(pm.info.iterationCount);\r",
									"}*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"email\": \"eve.holt@reqres.in\",\r\n\"password\": \"pistol\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/register",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Unsucessful_Sign Up",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\" Verify if Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});\r",
									"pm.test(\"Verify if the response body is Json\", function () {\r",
									"    pm.response.to.have.jsonBody();\r",
									"});\r",
									"pm.test(\"Verify if the responseBody is valid\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.error).to.eql(\"Missing password\");\r",
									"    \r",
									"});\r",
									"pm.test(\"Verify if the Content-Type =application/json; charset=utf-8\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\",\"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if the Connection =close\", function () {\r",
									"    pm.response.to.have.header(\"Connection\",\"close\");\r",
									"});\r",
									"pm.test(\"Verify if the X-Powered-By is hidden\", function () {\r",
									"    pm.response.to.not.have.header(\"X-Powered-By\");\r",
									"});\r",
									"pm.test(\"Verify if the Server is hidden)\", function () {\r",
									"    pm.response.to.not.have.header(\"Server\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"sydney@fife\"\r\n}\r\n ",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/register",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify if status code is 200 OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body is correct\", function () {\r",
									"    pm.response.to.have.jsonBody();\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Verify if the responseBody is valid\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.token).to.eql(\"QpwL5tke4Pnpja7X4\");\r",
									"   \r",
									"\r",
									"    });\r",
									"\r",
									"\r",
									"\r",
									"  \r",
									"    pm.test(\"Verify if Content-Type=application/json; charset=utf-8\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if Connection = close\", function () {\r",
									"    pm.response.to.have.header(\"Connection\", \"close\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if X-Powered-By is hidden\", function () {\r",
									"    pm.response.to.not.have.header(\"X-Powered-By\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if Server is hidden\", function () {\r",
									"    pm.response.to.not.have.header(\"Server\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"eve.holt@reqres.in\",\r\n    \"password\": \"cityslicka\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/login",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login_UnSuccessful",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify if status code is 400 \", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body is JSON\", function () {\r",
									"    pm.response.to.have.jsonBody\r",
									"});\r",
									"pm.test(\"Your test name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.error).to.eql(\"Missing password\");\r",
									"});\r",
									"pm.test(\"Verify if Content-Type=application/json; charset=utf-8\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if Connection = close\", function () {\r",
									"    pm.response.to.have.header(\"Connection\", \"close\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if X-Powered-By is hidden\", function () {\r",
									"    pm.response.to.not.have.header(\"X-Powered-By\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if Server is hidden\", function () {\r",
									"    pm.response.to.not.have.header(\"Server\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"peter@klaven\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/login",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify if status code is 200 OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body is JSON\", function () {\r",
									"    pm.response.to.have.jsonBody\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if the responseBody is valid\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data[2].id).to.eql(9 );\r",
									"      pm.expect(jsonData.data[2].email).to.eql(\"tobias.funke@reqres.in\");\r",
									"       pm.expect(jsonData.data[2].first_name).to.eql(\"Tobias\");\r",
									"         pm.expect(jsonData.data[2].last_name).to.eql(\"Funke\");\r",
									"         pm.expect(jsonData.data[2].avatar).to.eql(\"https://reqres.in/img/faces/9-image.jpg\");\r",
									"         pm.expect(jsonData.support.url).to.eql(\"https://reqres.in/#support-heading\");\r",
									"         pm.expect(jsonData.support.text).to.eql(\"To keep ReqRes free, contributions towards server costs are appreciated!\");\r",
									"\r",
									"    });\r",
									"pm.test(\"Verify if Content-Type=application/json; charset=utf-8\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"pm.test(\"Verify if the Connection =close\", function () {\r",
									"    pm.response.to.have.header(\"Connection\",\"close\");\r",
									"});\r",
									"pm.test(\"Verify if the X-Powered-By is hidden\", function () {\r",
									"    pm.response.to.not.have.header(\"X-Powered-By\");\r",
									"});\r",
									"pm.test(\"Verify if the Server is hidden)\", function () {\r",
									"    pm.response.to.not.have.header(\"Server\");\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/users?page=0",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "0",
									"description": "d"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify if status code is 201 Created\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    pm.response.to.have.status(\"Created\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body is JSON\", function () {\r",
									"    pm.response.to.have.jsonBody\r",
									"});\r",
									"pm.test(\"Verify if response body is valid\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"name\");\r",
									"    pm.expect(pm.response.text()).to.include(\"job\");\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"    pm.expect(pm.response.text()).to.include(\"createdAt\");\r",
									"});\r",
									"\r",
									"let moment = require(\"moment\")\r",
									"console.log(moment.utc().local().format(\"MM/DD/YY, HH:mm A\"))\r",
									"console.log(moment.utc().local().format(\"YYYY-MM-DD\"))\r",
									"pm.test(\"Verify if createdAt includes current date\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(moment.utc().local().format(\"YYYY-MM-DD\"));\r",
									"\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Lisa\",\r\n    \"job\": \"leader\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/users",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify if status code is 200 OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body is JSON\", function () {\r",
									"    pm.response.to.have.jsonBody\r",
									"});\r",
									"pm.test(\"Verify if response body is valid\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"name\");\r",
									"    pm.expect(pm.response.text()).to.include(\"job\");\r",
									"       pm.expect(pm.response.text()).to.include(\"updatedAt\");\r",
									"});\r",
									"let moment = require(\"moment\")\r",
									"console.log(moment.utc().local().format(\"MM/DD/YY, HH:mm A\"))\r",
									"console.log(moment.utc().local().format(\"YYYY-MM-DD\"))\r",
									"\r",
									"pm.test(\"Verify if createdAt includes current date\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(moment.utc().local().format(\"YYYY-MM-DD\"));\r",
									"\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"saritha\",\r\n    \"job\": \"test lead\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/users/6",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users",
								"6"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify if status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"    pm.response.to.have.status(\"No Content\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body is JSON\", function () {\r",
									"    pm.response.to.not.have.body();\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/users/6",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users",
								"6"
							]
						}
					},
					"response": []
				},
				{
					"name": "single User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify if status code is 200 OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body is JSON\", function () {\r",
									"    pm.response.to.have.jsonBody\r",
									"});\r",
									"pm.test(\"Verify if response body is valid\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"    pm.expect(pm.response.text()).to.include(\"email\");\r",
									"       pm.expect(pm.response.text()).to.include(\"first_name\");\r",
									"       pm.expect(pm.response.text()).to.include(\"last_name\");\r",
									"       pm.expect(pm.response.text()).to.include(\"avatar\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"The id is a number and string \", funtion() => {\r",
									"responseJson = pm.response.json();\r",
									"    pm.expect(responseJson.data.id).to.be.a('number');\r",
									"      pm.expect(responseJson.data.first_name).to.be.a('string');\r",
									"        //pm.expect(responseJson.data.avatar).to.be.u;\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "text"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/users/2",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users",
								"2"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Neagtive TC",
			"item": [
				{
					"name": "List Users_HTTP tampering_post",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify if status code is 405 Method Not Allowed\", function () {\r",
									"    pm.response.to.have.status(405);\r",
									"    pm.response.to.have.status(\"Method Not Allowed\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response not to hve a body \", function () {\r",
									"    pm.response.to.not.have.body();\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/users?page=2",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "2",
									"description": "d"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "single User_HTTP_Put_Tamper",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify if status code is 405 Method Not Allowed\", function () {\r",
									"    pm.response.to.have.status(405);\r",
									"    pm.response.to.have.status(\"Method Not Allowed\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response not to hve a body \", function () {\r",
									"    pm.response.to.not.have.body();\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "text"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/users/2",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User_Delete_HTTP Tampering",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify if status code is 405 Method Not Allowed\", function () {\r",
									"    pm.response.to.have.status(405);\r",
									"    pm.response.to.have.status(\"Method Not Allowed\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response not to hve a body \", function () {\r",
									"    pm.response.to.not.have.body();\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"morpheus\",\r\n    \"job\": \"leader\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/users",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update user_Post HTTP tampering",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify if status code is 405 Method Not Allowed\", function () {\r",
									"    pm.response.to.have.status(405);\r",
									"    pm.response.to.have.status(\"Method Not Allowed\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response not to hve a body \", function () {\r",
									"    pm.response.to.not.have.body();\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"saritha\",\r\n    \"job\": \"test lead\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/users/6",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users",
								"6"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sign Up_get HTTP Tampering",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify if status code is 405 Method Not Allowed\", function () {\r",
									"    pm.response.to.have.status(405);\r",
									"    pm.response.to.have.status(\"Method Not Allowed\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response not to hve a body \", function () {\r",
									"    pm.response.to.not.have.body();\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"email\": \"eve.holt@reqres.in\",\r\n\"password\": \"pistol\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/register",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login_Get_HTTP Tampering method",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify if status code is 405 Method Not Allowed\", function () {\r",
									"    pm.response.to.have.status(405);\r",
									"    pm.response.to.have.status(\"Method Not Allowed\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response not to hve a body \", function () {\r",
									"    pm.response.to.not.have.body();\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"eve.holt@reqres.in\",\r\n    \"password\": \"cityslicka\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/login",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User_Request body Tamp Missing  UN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify if Status Code is  400 \", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"\",\r\n    \"job\": \"leader\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/users",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User_Request body Tamp Missing  JOB",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify if Status Code is  400 \", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"\",\r\n    \"job\": \"leader\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/users",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User_Request body Tamp Missing  both UN,JOB",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify if Status Code is  400 \", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    pm.response.to.have.status(\"Bad Request\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"sita\",\r\n    \"job\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/users",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User_Payload/body tampering",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Verify if inavlid tag in entered in Payload , system throws (404 ,400,413 ,500)\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([404 ,400,413 ,500]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"rama\",\r\n    \"job\": \"manager\",\r\n    \"salary\": 90000\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/users",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Users_Query Param Tammering",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"verify if status code  is 4xx  query parametering tamepering\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/users?page=0",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "0",
									"description": "d"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "single User_End point_tampering",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Verify if status code is 4xx\", function () {\r",
									"    pm.response.to.be.clientError;\r",
									"});\r",
									"   \r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "text"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/users/",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "single User_twoEnd point_tampering",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Verify if status code is 4xx\", function () {\r",
									"    pm.response.to.be.clientError;\r",
									"});\r",
									"   \r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "text"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "single User_HTTPDownGrade tampering",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify if status  code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response not to hve a body \", function () {\r",
									"    pm.response.to.have.body();\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "text"
								}
							}
						},
						"url": {
							"raw": "http://reqres.in/api/users/2",
							"protocol": "http",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User_Request Header_Tamper",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify if status code is 415 unsupoorted media type\", function () {\r",
									"    pm.response.to.have.status(415);\r",
									"    \r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/html",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Lisa\",\r\n    \"job\": \"leader\"\r\n}",
							"options": {
								"raw": {
									"language": "html"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/users",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login_Request Heder tammering to TXT",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify if the status code 4XX\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([415, 400]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"eve.holt@reqres.in\",\r\n    \"password\": \"cityslicka\"\r\n}",
							"options": {
								"raw": {
									"language": "text"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/login",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}